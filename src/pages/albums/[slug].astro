---
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import { getAlbums, getPhotos, type Images } from "../../lib/notion";
import { readFileSync, writeFileSync } from "fs";

export type Props = {
  title: string;
  description: string;
  date: string;
  photos: Images;
};

export async function getStaticPaths() {
  if (import.meta.env.PROD) {
    const projects = await getAlbums("076c02479a7e4a4a80c54569831d85e5");
    const paths = [];

    for (const project of projects) {
      const photos = await getPhotos(project.id);
      paths.push({
        params: {
          slug: project.slug,
        },
        props: {
          title: project.name,
          description: project.description,
          date: project.date,
          photos,
        },
      });
    }
    writeFileSync("albums.json", JSON.stringify(paths));
    return paths;
  }

  const paths = JSON.parse(readFileSync("albums.json", "utf-8"));
  return paths;
}

const { title, description, date, photos } = Astro.props;
---

<Layout title={title}>
  <div class="py-7">
    <h1 class="font-title text-white tracking-wider text-xl">{title}</h1>
    <p class="text-slate-200">{description}</p>
    <p class="text-slate-200">{date}</p>
    <div
      class="flex flex-col space-y-8 mt-5 md:grid md:grid-cols-2 md:space-y-0 md:gap-3"
    >
      {
        photos.map((photo) => {
          let height = 1080;
          if (photo.aspectRatio === "4:5") {
            height = 1350;
          } else if (photo.aspectRatio === "1.91:1") {
            height = 565;
          }
          return (
            <Image
              width={1080}
              height={height}
              format="webp"
              src={photo.src}
              class="w-full h-full object-cover rounded"
              alt={photo.alt}
            />
          );
        })
      }
    </div>
  </div>
</Layout>
